services:

    app.security.login_form_authenticator:
        class: 'AppBundle\Security\LoginFormAuthenticator'
        arguments:
            - '@form.factory'
            - '@app.users.repository.default'
            - '@router'
            - '@security.password_encoder'

    app.security.voter.delete_thought_voter:
        class: 'AppBundle\Security\Voter\DeleteThoughtVoter'
        tags:
            - { name: 'security.voter' }

    app.mutual_friends_resolver.default: '@app.mutual_friends_resolver.neo4j'

    app.mutual_friends_resolver.neo4j:
        class: AppBundle\MutualFriendsResolver\Neo4jMutualFriendsResolver
        arguments:
            - '@neo4j.client.default'
            - '@app.mutual_friends_resolver.users_provider.repository'

    app.mutual_friends_resolver.users_provider.repository:
        class: AppBundle\MutualFriendsResolver\UsersProvider\RepositoryUsersProvider
        arguments:
            - '@app.users.repository.default'

    app.mutual_friends_resolver.users_provider.fake:
        class: AppBundle\MutualFriendsResolver\UsersProvider\FakeUsersProvider

    app.mutual_friends_resolver.users_provider.qb:
        class: AppBundle\MutualFriendsResolver\UsersProvider\QueryBuilderUsersProvider
        arguments:
            - '@doctrine.orm.entity_manager'

    app.mutual_friends_exstension:
          class: 'AppBundle\Twig\Extension\MutualFriendsExtension'
          arguments:
              - '@app.mutual_friends_resolver.default'
          tags:
              - { name: 'twig.extension' }

    ### core

    app.core.command_bus.default: '@app.core.command_bus.simplebus'

    app.core.command_bus.simplebus:
        class: 'SocNet\Core\CommandBus\SimpleBusAdapter'
        arguments: ['@command_bus']

    app.core.event_bus.default: '@app.core.event_bus.simplebus'

    app.core.event_bus.simplebus:
        class: 'SocNet\Core\EventBus\SimpleBusAdapter'
        arguments: ['@simple_bus.event_bus']

    ### users

    app.users.repository.default: '@app.users.repository.doctrine'

    app.users.repository.doctrine:
        class: 'SocNet\Users\Repositories\DoctrineUsersRepository'
        arguments:
            - '@doctrine.orm.entity_manager'

    app.users.email_availability_checker.default: '@app.users.email_availability_checker.repository'

    app.users.email_availability_checker.repository:
        class: 'SocNet\Users\EmailAvailabilityChecker\EmailAvailabilityChecker'
        arguments: ['@app.users.repository.default']

    app.users.security.current_user_resolver:
        class: 'SocNet\Users\Security\CurrentUserResolver\CurrentUserResolver'
        arguments: ['@security.token_storage']

    app.users.security.current_user:
        class: 'SocNet\Users\User'
        factory: ['@app.users.security.current_user_resolver', 'getUser']

    app.users.validation.validators.unique_email:
        class: 'SocNet\Users\Validation\Validators\UniqueEmailValidator'
        arguments: ['@app.users.email_availability_checker.repository']
        tags:
            - { name: 'validator.constraint_validator' }

    app.users.handlers.store:
        class: 'SocNet\Users\Handlers\StoreUserCommandHandler'
        arguments: ['@app.users.repository.default', '@security.password_encoder', '@app.users.email_availability_checker.default']
        tags:
            - { name: 'command_handler', handles: 'SocNet\Users\Commands\StoreUserCommand' }

    ### thoughts

    app.thoughts.repositories.default: '@app.thoughts.repositories.doctrine'

    app.thoughts.repositories.doctrine:
        class: 'SocNet\Thoughts\Repositories\DoctrineThoughtsRepository'
        arguments: ['@doctrine.orm.entity_manager']

    app.thoughts.form.thought_type:
        class: 'SocNet\Thoughts\Form\ThoughtType'
        arguments: ['@app.users.security.current_user']
        tags:
            - { name: 'form.type' }

    app.thoughts.thoughts_counter.default: '@app.thoughts.thoughts_counter.ensuring_default_value'

    app.thoughts.thoughts_counter.redis:
        class: 'SocNet\Thoughts\ThoughtsCounter\RedisThoughtsCounter'
        arguments: ['@snc_redis.default']

    app.thoughts.thoughts_counter.logging:
        class: 'SocNet\Thoughts\ThoughtsCounter\LoggingThoughtsCounter'
        arguments: ['@app.thoughts.thoughts_counter.redis', '@logger']

    app.thoughts.thoughts_counter.ensuring_default_value:
        class: 'SocNet\Thoughts\ThoughtsCounter\EnsuringDefaultValueThoughtCounter'
        arguments: ['@app.thoughts.thoughts_counter.logging']

    app.thoughts.thoughts_counter.twig.exstension:
        class: 'SocNet\Thoughts\ThoughtsCounter\Twig\ThoughtsCounterExtension'
        arguments: ['@app.thoughts.thoughts_counter.default']
        tags:
            - { name: 'twig.extension' }

    app.thoughts.handlers.store:
        class: 'SocNet\Thoughts\Handlers\StoreThoughtCommandHandler'
        arguments: ['@app.thoughts.repositories.default', '@app.core.event_bus.default']
        tags:
            - { name: 'command_handler', handles: 'SocNet\Thoughts\Commands\StoreThoughtCommand' }

    app.thoughts.handlers.delete:
        class: 'SocNet\Thoughts\Handlers\DeleteThoughtCommandHandler'
        arguments: ['@app.thoughts.repositories.default', '@app.core.event_bus.default']
        tags:
            - { name: 'command_handler', handles: 'SocNet\Thoughts\Commands\DeleteThoughtCommand' }

    app.thoughts.event_subscribers.increase_thoughts_number_for_user:
        class: 'SocNet\Thoughts\EventSubscribers\IncreaseThoughtsNumberForUser'
        arguments: ['@app.thoughts.thoughts_counter.default']
        tags:
            - { name: 'event_subscriber', subscribes_to: 'SocNet\Thoughts\Events\ThoughtWasPublishedEvent' }

    app.thoughts.event_subscribers.decrease_thoughts_number_for_user:
        class: 'SocNet\Thoughts\EventSubscribers\DecreaseThoughtsNumberForUser'
        arguments: ['@app.thoughts.thoughts_counter.default']
        tags:
            - { name: 'event_subscriber', subscribes_to: 'SocNet\Thoughts\Events\ThoughtWasDeletedEvent' }

    ### communities

    app.communities.repositories.default: '@app.communities.repositories.doctrine'

    app.communities.repositories.doctrine:
        class: 'SocNet\Communities\Repositories\DoctrineCommunitiesRepository'
        arguments: ['@doctrine.orm.entity_manager']

    app.communities.form.community_type:
        class: 'SocNet\Communities\Form\CommunityType'
        arguments: ['@app.users.security.current_user']
        tags:
            - { name: 'form.type' }

    app.communities.handlers.store:
        class: 'SocNet\Communities\Handlers\StoreCommunityCommandHandler'
        arguments: ['@app.communities.repositories.default']
        tags:
            - { name: 'command_handler', handles: 'SocNet\Communities\Commands\StoreCommunityCommand' }

    app.communities.handlers.join:
        class: 'SocNet\Communities\Handlers\JoinCommunityCommandHandler'
        arguments: ['@app.communities.repositories.default']
        tags:
            - { name: 'command_handler', handles: 'SocNet\Communities\Commands\JoinCommunityCommand' }

    app.communities.handlers.leave:
        class: 'SocNet\Communities\Handlers\LeaveCommunityCommandHandler'
        arguments: ['@app.communities.repositories.default']
        tags:
            - { name: 'command_handler', handles: 'SocNet\Communities\Commands\LeaveCommunityCommand' }
