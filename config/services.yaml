# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    _defaults:
        public: false
        autowire: true
        autoconfigure: true

    Angelov\Donut\:
        resource: '../src/Donut/*'

    AppBundle\:
        resource: '../src/AppBundle/*'
        exclude: '../src/AppBundle/{Controller,FeatureContexts,Kernel.php}'

    ApiBundle\:
        resource: '../src/ApiBundle/*'
        exclude: '../src/ApiBundle/Controller'

    AppBundle\Controller\:
        resource: '../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    ApiBundle\Controller\:
        resource: '../src/ApiBundle/Controller'
        public: true
        tags: ['controller.service_arguments']


#### CORE

    GraphAware\Neo4j\Client\Client: "@neo4j.client.default"
    Predis\Client: '@snc_redis.default'
    Doctrine\ORM\Id\UuidGenerator: ~

    # command bus
    Angelov\Donut\Core\CommandBus\SimpleBusAdapter:
        autowire: false
        arguments: ['@simple_bus.command_bus']

    # event bus
    Angelov\Donut\Core\EventBus\SimpleBusAdapter:
        autowire: false
        arguments: ['@simple_bus.event_bus']


#### USERS

    # security

    Angelov\Donut\Users\User:
        factory: ['@Angelov\Donut\Users\Security\CurrentUserResolver\CurrentUserResolver', 'getUser']


#### MESSY

    app.api.serialization.community:
        class: 'ApiBundle\Serialization\CommunityHandler'
        tags:
            - { name: 'jms_serializer.subscribing_handler', type: 'Angelov\Donut\Communities\Community', format: 'json' }

    AppBundle\FriendsSuggestions\RegisterUserResidencyInNeo4j:
        public: true
        tags:
            - { name: 'event_subscriber', subscribes_to: 'Angelov\Donut\Users\Events\UserRegisteredEvent' }

    AppBundle\EventSubscribers\Users\SendWelcomingEmail:
        public: true
        tags:
            - { name: 'asynchronous_event_subscriber', subscribes_to: 'Angelov\Donut\Users\Events\UserRegisteredEvent' }


#### THOUGHTS

    # thoughts counter

    Angelov\Donut\Thoughts\ThoughtsCounter\ThoughtsCounterInterface: '@app.thoughts.thoughts_counter.ensuring_default_value'

    app.thoughts.thoughts_counter.default: '@app.thoughts.thoughts_counter.ensuring_default_value'

    Angelov\Donut\Thoughts\ThoughtsCounter\RedisThoughtsCounter: '@app.thoughts.thoughts_counter.redis'

    app.thoughts.thoughts_counter.redis:
        class: 'Angelov\Donut\Thoughts\ThoughtsCounter\RedisThoughtsCounter'

    Angelov\Donut\Thoughts\ThoughtsCounter\LoggingThoughtsCounter: '@app.thoughts.thoughts_counter.logging'

    app.thoughts.thoughts_counter.logging:
        class: 'Angelov\Donut\Thoughts\ThoughtsCounter\LoggingThoughtsCounter'
        arguments: ['@app.thoughts.thoughts_counter.redis', '@logger']

    app.thoughts.thoughts_counter.ensuring_default_value:
        class: 'Angelov\Donut\Thoughts\ThoughtsCounter\EnsuringDefaultValueThoughtCounter'
        arguments: ['@app.thoughts.thoughts_counter.logging']


    # event subscribers

    Angelov\Donut\Thoughts\EventSubscribers\IncreaseThoughtsNumberForUser:
        public: true
        tags:
            - { name: 'event_subscriber', subscribes_to: 'Angelov\Donut\Thoughts\Events\ThoughtWasPublishedEvent' }

    Angelov\Donut\Thoughts\EventSubscribers\DecreaseThoughtsNumberForUser:
        public: true
        tags:
            - { name: 'event_subscriber', subscribes_to: 'Angelov\Donut\Thoughts\Events\ThoughtWasDeletedEvent' }


#### FRIENDSHIPS

    # event subscribers

    Angelov\Donut\Friendships\EventSubscribers\RecordCreatedFriendship:
        public: true
        tags:
            - { name: 'event_subscriber', subscribes_to: 'Angelov\Donut\Friendships\Events\FriendshipWasCreatedEvent' }

    Angelov\Donut\Friendships\EventSubscribers\RecordDeletedFriendship:
        public: true
        tags:
            - { name: 'event_subscriber', subscribes_to: 'Angelov\Donut\Friendships\Events\FriendshipWasDeletedEvent' }

    Angelov\Donut\Friendships\EventSubscribers\DeleteInverseFriendship:
        public: true
        tags:
            - { name: 'event_subscriber', subscribes_to: 'Angelov\Donut\Friendships\Events\FriendshipWasDeletedEvent' }
