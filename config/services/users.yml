services:

    _defaults:
        public: false
        autowire: true
        autoconfigure: true

    # repositories

    Angelov\Donut\Users\Repositories\UsersRepositoryInterface: '@app.users.repository.doctrine'

    app.users.repository.default: '@app.users.repository.doctrine'

    app.users.repository.doctrine:
        class: 'Angelov\Donut\Users\Repositories\DoctrineUsersRepository'


    # email availability checker

    Angelov\Donut\Users\EmailAvailabilityChecker\EmailAvailabilityCheckerInterface: '@app.users.email_availability_checker.repository'

    app.users.email_availability_checker.default: '@app.users.email_availability_checker.repository'

    app.users.email_availability_checker.repository:
        class: 'Angelov\Donut\Users\EmailAvailabilityChecker\EmailAvailabilityChecker'


    # security

    app.users.security.current_user_resolver:
        class: 'Angelov\Donut\Users\Security\CurrentUserResolver\CurrentUserResolver'

    app.users.security.current_user:
        class: 'Angelov\Donut\Users\User'
        factory: ['@app.users.security.current_user_resolver', 'getUser']

    app.users.security.user_provider:
        class: 'Angelov\Donut\Users\Security\Provider\RepositoryUserProvider'


    # form

    app.users.form.registration:
        class: 'Angelov\Donut\Users\Form\UserRegistrationForm'
        tags:
            - { name: 'form.type' }


    # validation

    app.users.validation.validators.unique_email:
        class: 'Angelov\Donut\Users\Validation\Validators\UniqueEmailValidator'
        tags:
            - { name: 'validator.constraint_validator' }


    # command handlers

    app.users.handlers.store:
        class: 'Angelov\Donut\Users\Handlers\StoreUserCommandHandler'
        public: true
        tags:
            - { name: 'command_handler', handles: 'Angelov\Donut\Users\Commands\StoreUserCommand' }
