services:

    _defaults:
        public: false
        autowire: true

    # repositories

    Angelov\Donut\Friendships\FriendshipRequests\Repositories\FriendshipRequestsRepositoryInterface: '@app.friendships.friendship_requests.repositories.doctrine'

    app.friendships.friendship_requests.repositories.default: '@app.friendships.friendship_requests.repositories.doctrine'

    app.friendships.friendship_requests.repositories.doctrine:
        class: 'Angelov\Donut\Friendships\FriendshipRequests\Repositories\DoctrineFriendshipRequestsRepository'

    Angelov\Donut\Friendships\Repositories\FriendshipsRepositoryInterface: '@app.friendships.repositories.doctrine'

    app.friendships.repositories.default: '@app.friendships.repositories.doctrine'

    app.friendships.repositories.doctrine:
        class: 'Angelov\Donut\Friendships\Repositories\DoctrineFriendshipsRepository'


    # handlers

    app.friendships.friendship_requests.handlers.send:
        class: 'Angelov\Donut\Friendships\FriendshipRequests\Handlers\SendFriendshipRequestCommandHandler'
        public: true
        tags:
            - { name: 'command_handler', handles: 'Angelov\Donut\Friendships\FriendshipRequests\Commands\SendFriendshipRequestCommand' }

    app.friendships.friendship_requests.handlers.cancel:
        class: 'Angelov\Donut\Friendships\FriendshipRequests\Handlers\CancelFriendshipRequestCommandHandler'
        public: true
        tags:
            - { name: 'command_handler', handles: 'Angelov\Donut\Friendships\FriendshipRequests\Commands\CancelFriendshipRequestCommand' }

    app.friendships.friendship_requests.handlers.decline:
        class: 'Angelov\Donut\Friendships\FriendshipRequests\Handlers\DeclineFriendshipRequestCommandHandler'
        public: true
        tags:
            - { name: 'command_handler', handles: 'Angelov\Donut\Friendships\FriendshipRequests\Commands\DeclineFriendshipRequestCommand' }

    app.friendships.friendship_requests.handlers.accept:
        class: 'Angelov\Donut\Friendships\FriendshipRequests\Handlers\AcceptFriendshipRequestCommandHandler'
        public: true
        tags:
            - { name: 'command_handler', handles: 'Angelov\Donut\Friendships\FriendshipRequests\Commands\AcceptFriendshipRequestCommand' }

    app.friendships.handlers.delete:
        class: 'Angelov\Donut\Friendships\Handlers\DeleteFriendshipCommandHandler'
        public: true
        tags:
            - { name: 'command_handler', handles: 'Angelov\Donut\Friendships\Commands\DeleteFriendshipCommand' }

    app.friendships.handlers.store:
        class: 'Angelov\Donut\Friendships\Handlers\StoreFriendshipCommandHandler'
        public: true
        tags:
            - { name: 'command_handler', handles: 'Angelov\Donut\Friendships\Commands\StoreFriendshipCommand' }


    # event subscribers

    app.friendships.event_subsribers.record_created_friendship:
        class: 'Angelov\Donut\Friendships\EventSubscribers\RecordCreatedFriendship'
        public: true
        tags:
            - { name: 'event_subscriber', subscribes_to: 'Angelov\Donut\Friendships\Events\FriendshipWasCreatedEvent' }

    app.friendships.event_subscribers.record_deleted_friendship:
        class: 'Angelov\Donut\Friendships\EventSubscribers\RecordDeletedFriendship'
        public: true
        tags:
            - { name: 'event_subscriber', subscribes_to: 'Angelov\Donut\Friendships\Events\FriendshipWasDeletedEvent' }

    app.friendships.event_subscribers.delete_inverse_friendship:
        class: 'Angelov\Donut\Friendships\EventSubscribers\DeleteInverseFriendship'
        public: true
        tags:
            - { name: 'event_subscriber', subscribes_to: 'Angelov\Donut\Friendships\Events\FriendshipWasDeletedEvent' }


    # friendships recorder

    Angelov\Donut\Friendships\FriendshipsRecorder\FriendshipsRecorderInterface: '@app.friendships.friendships_recorder.neo4j'

    app.friendships.friendships_recorder.neo4j:
        class: 'Angelov\Donut\Friendships\FriendshipsRecorder\Neo4jFriendshipsRecorder'


    # mutual friends resolver

    Angelov\Donut\Friendships\MutualFriendsResolver\MutualFriendsResolverInterface: '@app.mutual_friends_resolver.neo4j'

    app.mutual_friends_resolver.default: '@app.mutual_friends_resolver.neo4j'

    app.mutual_friends_resolver.neo4j:
        class: 'Angelov\Donut\Friendships\MutualFriendsResolver\Neo4jMutualFriendsResolver\Neo4jMutualFriendsResolver'

    Angelov\Donut\Friendships\MutualFriendsResolver\Neo4jMutualFriendsResolver\IdsResolver: '@app.mutual_friends_resolver.neo4j.ids_resolver'

    app.mutual_friends_resolver.neo4j.ids_resolver:
        class: 'Angelov\Donut\Friendships\MutualFriendsResolver\Neo4jMutualFriendsResolver\IdsResolver'

    Angelov\Donut\Friendships\MutualFriendsResolver\UsersProvider\UsersProviderInterface: '@app.friendships.mutual_friends_resolver.users_provider.repository'

    app.friendships.mutual_friends_resolver.users_provider.repository:
        class: 'Angelov\Donut\Friendships\MutualFriendsResolver\UsersProvider\RepositoryUsersProvider'

    app.friendships.mutual_friends_resolver.mutual_friends_exstension:
        class: 'Angelov\Donut\Friendships\MutualFriendsResolver\Twig\MutualFriendsExtension'
        tags:
            - { name: 'twig.extension' }
